Fail Fast Vs Fail Safe

Failfast

1)Fail-Fast iterator will throw ConcurrentModificationException
when we try to iterate over collection and simultaneously try to update it i.e structural modification

2)Iterator on ArrayList, HashMap classes are some examples of fail-fast Iterator.

3)This iterator runs over the original collecttion

Fail-Safe

1)Fail-Safe iterator will not throw ConcurrentModificationException
because it iterate over clone of collections

2)CopyonWriteArrayList,ConcurrentHashMap are example of fail-safe iterator


How Fail-Fast iterator know if they are modified during iteration?

1)Iterator maintains a modCount Flag, each time collection isupdated
2)After next() is called if the modcount is same or not as that of creating instance of iterator()



Intresting thing :

1)Not every fail-safe iterator will make clone/copy of collection to save himself from the CMException
Example: CopyOnWriteArrayist make a copy/clone, ConcurrentHashMap dont

The iterators returned by ConcurrentHashMap is weakly consistent. This means that this iterator can tolerate
concurrent modification, traverses elements as they existed when iterator was constructed and may (but not guaranteed to)
reflect modifications to the collection after the construction of the iterator.
