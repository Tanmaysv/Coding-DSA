SQL         VS    NO-SQL
Structured  VS    Un-structured
ACID        VS    BASE
Vertical    VS    Horizontal
scaling           scaling

What is advantage of No-SQL over SQL ?
NO-SQL can be scalled horizontally easily vs SQL.

Why we cannot scale SQL Horizontally?
Scalability is mainly consisting of 2 parameters:
- Read scaling: handle higher volumes of read operations
- Write scaling: handle higher volumes of write operations

Lets  take a example of SQL DB:

Read scalability : Doable for SQL
Write Scalability : Keep getting Complex as you scale i.e add servers

How can we scale the reads of SQL ,if we want SQL in 3 servers ?
- We will copy/maintain replica of same db in 3 servers , so now 3 servers have same 3 db

How can we scale the write of SQL ,if we want SQL in 3 servers ?
-Just by writing in all 3 servers simultaneously ? is it possible ?
Can you maintain ACID Property ?
Lets Think :
If you were to write a single object in db , you will need to maintain ACID

Atomicity : means that transactions must complete or fail as a whole,
so a lot of bookkeeping must be done behind the scenes to guarantee this.

Consistency: constraints mean that all nodes in the cluster must be identical.
If you write to one node, this write must be copied to all other nodes before
returning a response to the client. This makes a traditional RDBMS cluster hard to scale.

Durability: constraints mean that in order to never lose a write you must ensure that before
a response is returned to the client, the write has been flushed to disk.



