Comparable

1)Comparable is interface , we need to override compareTo , and write logic in it

2)Use comparable if the object is in your control.

Comaparator

1)Comaprator is also interface , we overide compare method

2)Use comparator if the object is outside your control and you cannot make them implement Comparable


When to use what ?

When we need to sort a object getting from third part , we cannot add interface to that objects class
-So we add comparator logic in our class using comparator

 Collections.sort(laptops, new Comparator<Laptop>() {
            @Override
            public int compare(Laptop o1, Laptop o2) {
                return o1.getPrice()>o2.getPrice()?1:-1;
            }
        });
